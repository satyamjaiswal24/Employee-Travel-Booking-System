@model Employee_Travel_Booking_App.employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <style>
        /* CSS styles for form container */
        .form-container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            background-color: #f9f9f9;
        }

        /* CSS styles for form layout */
        .form-group {
            margin-bottom: 20px;
        }

        .control-label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }

        /* CSS styles for input fields */
        .form-control {
            width: calc(100% - 10px);
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }

            .form-control:focus {
                border-color: #007bff;
                outline: none;
            }

        /* CSS styles for buttons */
        .btn-container {
            text-align: center;
        }

        .btn {
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn:hover {
                background-color: #0056b3;
            }
    </style>
   
</head>
<body>
    <div class="form-container">
        <h2>Create New Employee</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(model => model.emp_name, "Employee Name", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.emp_name, new { htmlAttributes = new { @class = "form-control", id = "emp_name" } })
                @Html.ValidationMessageFor(model => model.emp_name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", id = "email", type = "email" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.emp_password, "Password", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.emp_password, new { htmlAttributes = new { @class = "form-control", id = "password" } })
                @Html.ValidationMessageFor(model => model.emp_password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.department, "Department", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.department, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.position, "Position", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.hiredate, "Hire Date", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.hiredate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.hiredate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phonenumber, "Phone Number", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phonenumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, "Address", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.managerid, "Assign Manager", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("managerid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.managerid, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        }
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('form').submit(function (event) {
                var empName = $("#emp_name").val().trim();
                var email = $("#email").val().trim();
                var password = $("#password").val().trim();

                if (empName === "" || email === "" || password === "") {
                    alert("Please fill out all required fields.");
                    return false;
                }

                // Check email existence via AJAX
                $.get("/Employees/IsEmailAvailable", { email: email }, function (data) {
                    if (!data) {
                        alert("The email is already in use. Please choose a new email.");
                        event.preventDefault(); // Prevent form submission
                    } else {
                        // Continue with form submission
                    }
                });

                return true; // Continue with form submission (if email check is asynchronous)
            });
        });

    </script>
</body>
</html>
